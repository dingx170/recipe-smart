{"version":3,"sources":["./src/app/components/mealplan/oldplan/recipelist/recipelist.component.ts","./src/app/components/mealplan/oldplan/recipelist/recipelist.component.html","./src/app/enums/cuisine.enum.ts","./src/app/enums/feature.enum.ts","./src/app/enums/meal-type.enum.ts","./src/app/components/user-profiles/user-profiles.component.ts","./src/app/components/user-profiles/user-profiles.component.html","./src/app/services/share-data.service.ts","./src/environments/environment.ts","./src/app/components/myrecipe/newrecipe/newrecipe.component.ts","./src/app/components/myrecipe/newrecipe/newrecipe.component.html","./src/app/services/login.service.ts","./src/app/components/mealplan/newplan/newplan.component.ts","./src/app/components/mealplan/newplan/newplan.component.html","./src/app/enums/recipe-tag.enum.ts","./src/app/enums/food-allergy.enum.ts","./src/app/components/mealplan/oldplan/oldplan.component.ts","./src/app/components/mealplan/oldplan/oldplan.component.html","./src/app/services/mealplan.service.ts","./src/app/components/ads/ads.component.ts","./src/app/components/ads/ads.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/components/recipes/recipes.component.ts","./src/app/components/recipes/recipes.component.html","./src/app/components/login/login.component.ts","./src/app/components/login/login.component.html","./src/app/app.module.ts","./src/app/services/recipe.service.ts","./src/app/components/myrecipe/oldrecipe/oldrecipe.component.ts","./src/app/components/myrecipe/oldrecipe/oldrecipe.component.html","./src/app/components/mealplan/oldplan/shoppinglist/shoppinglist.component.ts","./src/app/components/mealplan/oldplan/shoppinglist/shoppinglist.component.html","./src/app/components/recipe-content/recipe-content.component.ts","./src/app/components/recipe-content/recipe-content.component.html","./src/app/services/auth.service.ts","./src/app/components/myrecipe/myrecipe.component.ts","./src/app/components/myrecipe/myrecipe.component.html","./src/app/components/mealplan/mealplan.component.ts","./src/app/components/mealplan/mealplan.component.html","./src/app/services/user.service.ts","./src/app/components/header-base/header-base.component.ts","./src/app/components/header-base/header-base.component.html","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { MealplanService } from '../../../../services/mealplan.service';\r\nimport { IRecipe } from '../../../../interfaces/irecipe'\r\nimport { AuthService } from 'src/app/services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-recipelist',\r\n  templateUrl: './recipelist.component.html',\r\n  styleUrls: ['./recipelist.component.css']\r\n})\r\nexport class RecipelistComponent implements OnInit {\r\n\r\n  public myrecipes: any[];\r\n\r\n  public mealplanId: string;\r\n\r\n  public userId: number;\r\n\r\n  constructor(public recipeService: MealplanService, \r\n              public route: ActivatedRoute,\r\n              public authService: AuthService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.authService.getSession().subscribe(\r\n      data =>{\r\n        this.userId = data.user_id;\r\n        console.log(\"Get response: \" + JSON.stringify(data));\r\n        this.mealplanId = this.route.snapshot.params['mealplanId'];\r\n        this.getRecipeList();\r\n      }\r\n\r\n    );\r\n    \r\n\r\n  }\r\n\r\n  getRecipeList() {\r\n    var rxjsData = this.recipeService.getRecipeListByMealplanID(this.mealplanId, this.userId);\r\n    rxjsData.subscribe((data) => {\r\n      console.log(data);\r\n      this.myrecipes = <any[]>data;\r\n    })\r\n  }\r\n\r\n}\r\n","<br>\r\n<h1 class=\"subtitle-text\">My Recipe List</h1>\r\n\r\n<table class=\"tab table table-borderless\">\r\n    <thead>\r\n        <tr>\r\n            <th scope=\"col\">#</th>\r\n            <th scope=\"col\">Recipe</th>\r\n            <th scope=\"col\"></th>\r\n            <th scope=\"col\">Quantity</th>\r\n            <th scope=\"col\">Done</th>\r\n        </tr>\r\n    </thead>\r\n\r\n    <tbody *ngFor=\"let item of myrecipes; let key=index;\">\r\n        <tr>\r\n            <th scope=\"row\">{{ key + 1 }}</th>\r\n            <td>{{ item.recipe.name }}</td>\r\n            <td>\r\n                <a [routerLink]=\"['.', item.recipe.recipe_id]\">\r\n                    <img src=\"{{item.recipe.photo}}\" class=\"img-responsive recipe-pic\" alt=\"Image\">\r\n                </a>\r\n            </td>\r\n            <td>{{item.quantity}}</td>\r\n            <td>\r\n                <input type=\"checkbox\">\r\n            </td>\r\n        </tr>\r\n    </tbody>\r\n</table>","export enum Cuisine {\n    None = \"None\",\n    Chinese = \"Chinese\", \n    Mexican = \"Mexican\", \n    Italian = \"Italian\", \n    Japanese = \"Japanese\", \n    Greek = \"Greek\", \n    French = \"French\", \n    Thai = \"Thai\", \n    Spanish = \"Spanish\", \n    Indian = \"Indian\", \n    Mediterranean = \"Mediterranean\"\n}\n","export enum Feature {\n    None = \"None\",\n    MeatLover = \"MeatLover\", \n    Vegetarian = \"Vegetarian\", \n    LowCarb = \"LowCarb\", \n    Vegan = \"Vegan\"\n}\n","export enum MealType {\n    None =\"None\",\n    Breakfast = \"Breakfast\",\n    Lunch = \"Lunch\",\n    Dinner = \"Dinner\"\n}\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { FoodAllergy } from 'src/app/enums/food-allergy.enum';\r\nimport { IUser } from 'src/app/interfaces/IUser';\r\nimport { UserService} from '../../services/user.service'\r\nimport { ShareDataService} from '../../services/share-data.service'\r\nimport { AuthService } from 'src/app/services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-user-profiles',\r\n  templateUrl: './user-profiles.component.html',\r\n  styleUrls: ['./user-profiles.component.css']\r\n})\r\nexport class UserProfilesComponent implements OnInit {\r\n\r\n  @Input()\r\n  user: IUser = {\r\n    user_id: -1,\r\n    name: \"pikachu\",\r\n    email: \"pikachu@gmail.com\",\r\n    ssoId: \"\",\r\n    restrictions: [FoodAllergy.None]\r\n  };\r\n\r\n  public userid: number;\r\n  public currUser: any;\r\n\r\n  logged_in: boolean = true;\r\n  updated_success: boolean = false;\r\n  update_fail: boolean = false;\r\n\r\n  allergy_list = Object.keys(FoodAllergy) as FoodAllergy[];\r\n\r\n  constructor(\r\n    private user_service: UserService,\r\n    private authService: AuthService,\r\n\r\n  ){\r\n      this.authService.getSession().subscribe(\r\n        data =>{\r\n          this.user = data;\r\n          if(this.user.user_id == -1){\r\n            this.logged_in = false;\r\n          }else{\r\n            this.logged_in = true;\r\n          }\r\n        }\r\n      );\r\n      // this.userid = this.share_service.getData(\"userid\");\r\n      // console.log(this.userid);\r\n      // // this.currUser = this.share_service.getData(\"userObj\");\r\n      // // console.log(\"user detail: \" + this.currUser);\r\n\r\n      // if(this.userid){\r\n      //   this.user_service.getUserById(this.userid).subscribe(res=>{\r\n\r\n      //     console.log(\"res:\" + JSON.stringify(res.user_obj));\r\n      //     console.log(\"name: \" + res.user_obj.name);\r\n      //     if(res.ret_code){\r\n      //       this.user = res.user_obj;\r\n      //     }else{\r\n      //       console.log(\"error\");\r\n      //     }\r\n  \r\n      //   });\r\n      // }\r\n      \r\n   }\r\n\r\n  ngOnInit(): void {\r\n\r\n    //every time initializing this component default logged in as false;\r\n    this.updated_success = false;\r\n    this.update_fail = false;\r\n\r\n    \r\n  }\r\n  /**\r\n   * update user with the user object held within this component\r\n   */\r\n  update():void{\r\n    if(this.userid){\r\n      // response from the backend needs to be structured as loginRes\r\n      this.user_service.updateUser(this.user, this.userid)\r\n        .subscribe(res => {\r\n            if(res.ret_code == 0){\r\n              this.updated_success = true;\r\n            }\r\n            else if(res.ret_code == -1){\r\n              this.update_fail = true;\r\n            }\r\n\r\n        });\r\n    }\r\n\r\n  }\r\n\r\n}\r\n","<div *ngIf=\"!logged_in\">\r\n  <div class = \"col-6\">\r\n    <div class=\"alert alert-warning\" role=\"alert\">\r\n      Please log in to view and update your profile!\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div *ngIf=\"updated_success\">\r\n  <div class=\"alert alert-success\" role=\"alert\">\r\n    <h4 class=\"alert-heading\">Success!</h4>\r\n    <p>You have updated your profile..</p>\r\n  </div>\r\n</div>\r\n\r\n<div *ngIf=\"update_fail\">\r\n  <div class=\"alert alert-danger\" role=\"alert\">\r\n    <h4 class=\"alert-heading\">Failed!</h4>\r\n    <p>Update not done Please try click save button again.</p>\r\n  </div>\r\n</div>\r\n\r\n<div *ngIf=\"logged_in\">\r\n  <div class=\"row content-header\">\r\n    <div class=\"col-1\"></div>\r\n    <div class=\"col-11\">\r\n        <h1 class=\"bar-text\">My Profile</h1>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"main-content\">\r\n\r\n    <br>\r\n      <div class=\"\">\r\n        <div class=\"row\">\r\n\r\n          <div class=\"col-1\"></div>\r\n          <div class=\"col-3\">\r\n            <div class=\"card card-profile shadow\">\r\n              <br><br><br>\r\n              <div class=\"row justify-content-center\">\r\n                <div class=\"col-lg-3 order-lg-2\">\r\n                  <div class=\"card-profile-image\">\r\n                      <img src=\"../../../assets/images/pikachu.png\" class=\"rounded-circle\">\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"card-body\">\r\n                <br>\r\n                <br>\r\n                <div class=\"row\">\r\n                  <div class=\"col\">\r\n                    <div class=\"card-profile-stats d-flex justify-content-center mt-md-5\">\r\n                      <div>\r\n                        <span class=\"heading\">22</span>\r\n                        <span class=\"description\">Recipes</span>\r\n                      </div>\r\n                      <div>\r\n                        <span class=\"heading\">88</span>\r\n                        <span class=\"description\">Likes</span>\r\n                      </div>\r\n                      <div>\r\n                        <span class=\"heading\">8</span>\r\n                        <span class=\"description\">Points</span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"text-center\">\r\n                  <h3>{{user.name}}</h3>\r\n                </div>\r\n                <br>\r\n                <div class=\"text-center\">\r\n                  <div class=\"h5 font-weight-300\">\r\n                    <a href=\"#\" class=\"btn btn-sm btn-info mr-4\">Popular</a>\r\n                    <a href=\"#\" class=\"btn btn-sm btn-primary mr-4\" >Recipe Master</a>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"col-6\">\r\n            <div class=\"card bg-secondary shadow\">\r\n              <div class=\"card-header bg-white border-0\">\r\n                <div class=\"row align-items-center\">\r\n                  <div class=\"col-8\">\r\n                    <h3 class=\"mb-0\">Basic Information</h3>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"card-body\">\r\n                <form>\r\n                  <div class=\"pl-lg-4\">\r\n                    <div class=\"row\">\r\n\r\n                      <div class=\"col-lg-6\">\r\n                        <div class=\"form-group focused\">\r\n                          <label class=\"form-control-label\" for=\"input-username\">Username</label>\r\n                          <input type=\"text\" id=\"input-username\" class=\"form-control\" [(ngModel)]=\"user.name\" name = \"username\" value={{user.name}}>\r\n                        </div>\r\n                      </div>\r\n\r\n          \r\n\r\n                      <div class=\"col-lg-6\">\r\n                        <div class=\"form-group focused\">\r\n                          <label class=\"form-control-label\" for=\"input-email\">Email</label>\r\n                          <input type=\"email\" class=\"form-control\" [(ngModel)]=\"user.email\" name = \"email\" value={{user.email}}>\r\n                        </div>\r\n                      </div>\r\n\r\n                    </div>\r\n                  </div>\r\n                  <label class=\"form-control-label\" for=\"allergies\">Allergy</label>\r\n                  <div class=\"col-lg-3\" *ngFor=\"let allergy of allergy_list\">\r\n                    <form>\r\n\r\n                        <input type = \"checkbox\" [checked] = \"user.restrictions.includes(allergy)\" ><span>{{allergy}}</span>\r\n                    </form>\r\n                  </div>\r\n\r\n\r\n                  <hr class=\"my-4\">\r\n                  <!-- Edit -->\r\n                  <div class=\"pl-lg-4\">\r\n                    <button class=\"btn edit-btn\">Save changes</button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-1\"></div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\n/**\r\n * This is a util service to store the temporary data returned from the backend\r\n */\r\nexport class ShareDataService {\r\n\r\n  data:any={};\r\n\r\n  constructor() { }\r\n\r\n  setData(key: any,value: any) {\r\n    this.data[key]=value;\r\n }\r\n\r\n clearData() {\r\n    this.data={};\r\n }\r\n\r\n getData(key: any) {\r\n   return this.data[key];\r\n }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { FoodAllergy } from '../../../enums/food-allergy.enum'\r\nimport { Cuisine } from '../../../enums/cuisine.enum'\r\nimport { Feature } from '../../../enums/feature.enum'\r\nimport { MealType } from '../../../enums/meal-type.enum'\r\nimport { RecipeTag } from '../../../enums/recipe-tag.enum'\r\nimport { IRecipe } from '../../../interfaces/irecipe'\r\nimport { RecipeService } from '../../../services/recipe.service';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-newrecipe',\r\n  templateUrl: './newrecipe.component.html',\r\n  styleUrls: ['./newrecipe.component.css']\r\n})\r\n\r\nexport class NewrecipeComponent implements OnInit {\r\n\r\n  public allergies = Object.keys(FoodAllergy);\r\n  public cuisineTypes = Object.keys(Cuisine);\r\n  public featureTypes = Object.keys(Feature);\r\n  public mealTypes = Object.keys(MealType);\r\n  public groupSizes = [1, 2, 3, 4, 5];\r\n  public budgets = [10, 20, 30, 40, 50, 60, 70, 80, 90, 100];\r\n\r\n  public recipe: IRecipe = {\r\n    recipe_id: 0,\r\n    name: '', \r\n    member_id: 1, \r\n    date: new Date(),\r\n    steps: [{ step: '' }],\r\n    ingredients: [{ name: '', unit: '', count: 0 }],\r\n    group: 0,\r\n    cost: 0,\r\n    unit_cost: 0,\r\n    photo: '',\r\n    likes: 0,\r\n    meal_type: MealType.None,\r\n    cuisine_type: Cuisine.None,\r\n    feature_type: Feature.None,\r\n    restrictions: [FoodAllergy.None],\r\n    recipe_tags: [RecipeTag.None],\r\n    labelerrors: ['']\r\n  };\r\n\r\n  public imagePath: string =\"\";\r\n  public imgURL: any = \"\";\r\n  public isUpdate: boolean;\r\n  public userId: number;\r\n\r\n  constructor(public recipeService: RecipeService, \r\n              public route: ActivatedRoute,\r\n              public authService: AuthService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.isUpdate = this.route.snapshot.data.isUpdate;\r\n\r\n    //added getSession to get user_id\r\n    this.authService.getSession().subscribe(\r\n      data =>{\r\n        this.userId = data.user_id;\r\n        console.log(JSON.stringify(data));\r\n      }\r\n    );\r\n\r\n    if (this.isUpdate) {\r\n      this.route.params.subscribe((value) => {\r\n        this.getRecipeContent(value.recipeId);\r\n      })\r\n    }\r\n  }\r\n\r\n  preview(files: any) {\r\n    if (files.length === 0)\r\n      return;\r\n \r\n    var reader = new FileReader();\r\n    this.imagePath = files;\r\n    reader.readAsDataURL(files[0]); \r\n    reader.onload = (_event) => { \r\n      this.imgURL = reader.result; \r\n    }\r\n  }\r\n\r\n  oneFileChanged(fileInput: any) {\r\n    if (fileInput.target.files && fileInput.target.files[0] && fileInput.target.files[0].size < 20971520) {\r\n      const reader = new FileReader();\r\n      reader.onload = (e: any) => {\r\n          const image = new Image();\r\n          image.src = e.target.result;\r\n          image.onload = rs => {\r\n\r\n          const imgBase64Path = e.target.result;\r\n          this.recipe.photo = imgBase64Path              \r\n          };\r\n      };\r\n\r\n      reader.readAsDataURL(fileInput.target.files[0]);\r\n    }\r\n\r\n  }\r\n\r\n  createRecipe(){\r\n    this.recipe.date = new Date();\r\n    this.recipe.unit_cost = Math.ceil(this.recipe.cost / this.recipe.group);\r\n\r\n    var rxjsData = this.recipeService.postNewRecipe(this.recipe, this.userId);\r\n    rxjsData.subscribe((data) => {\r\n      console.log(data);\r\n      alert(\"Success!\");\r\n    }) \r\n  }\r\n\r\n  updateRecipe(){\r\n    this.recipe.date = new Date();\r\n    this.recipe.unit_cost = Math.ceil(this.recipe.cost / this.recipe.group);\r\n\r\n    var rxjsData = this.recipeService.updateOneRecipe(this.recipe, this.userId);\r\n    rxjsData.subscribe((data) => {\r\n      console.log(data);\r\n      alert(\"Success!\");\r\n    }) \r\n  }\r\n\r\n  clearReport() {\r\n    this.recipe.labelerrors = [''];\r\n  }\r\n\r\n  deleteRecipe() {\r\n    var rxjsData = this.recipeService.deleteOneRecipe(this.recipe, this.userId);\r\n    rxjsData.subscribe((data) => {\r\n      console.log(data);\r\n      alert(\"Success!\");\r\n    })\r\n  }\r\n\r\n  addStep() {\r\n    this.recipe.steps.push({ step: '' });\r\n  }\r\n  \r\n  removeStep(i: number) {\r\n    this.recipe.steps.splice(i, 1);\r\n  }\r\n\r\n  addItem() {\r\n    this.recipe.ingredients.push({ name: '', unit: '', count: 0 });\r\n  }\r\n  \r\n  removeItem(i: number) {\r\n    this.recipe.ingredients.splice(i, 1);\r\n  }\r\n\r\n  getRecipeContent(recipeId: string) {\r\n    var rxjsData = this.recipeService.getRecipeByID(recipeId);\r\n    rxjsData.subscribe((data) => {\r\n      this.recipe = <IRecipe>data;\r\n    })    \r\n  }\r\n}\r\n","<div class=\"row\">\r\n\r\n    <div class=\"col-1\"></div>\r\n\r\n    <div class=\"col-11\">\r\n\r\n        <br>\r\n        <h1 class=\"page-text\" *ngIf=\"!isUpdate\">Create new recipe</h1>\r\n        <h1 class=\"page-text\" *ngIf=\"isUpdate\">Update my recipe</h1>\r\n        <hr><br>\r\n\r\n        <form>\r\n\r\n            <div class=\"row\">\r\n                <div class=\"col-2\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"mealType\" class=\"filter-label\">Meal Type</label>\r\n                        <select name=\"mealType\" id=\"mealType\" [(ngModel)]=\"recipe.meal_type\" class=\"form-control\">\r\n                          <option value=\"{{mealType}}\" *ngFor=\"let mealType of mealTypes\">{{mealType}}</option>\r\n                        </select>\r\n                    </div>    \r\n                </div>   \r\n                <div class=\"col-2\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"cuisineType\" class=\"filter-label\">Cuisine Type</label>\r\n                        <select name=\"cuisineType\" id=\"cuisineType\" [(ngModel)]=\"recipe.cuisine_type\" class=\"form-control\" >\r\n                            <option value=\"{{cuisineType}}\" *ngFor=\"let cuisineType of cuisineTypes\">{{cuisineType}}</option>\r\n                        </select>\r\n                    </div>\r\n                </div>   \r\n                <div class=\"col-2\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"featureType\" class=\"filter-label\">Feature Type</label>\r\n                        <select name=\"featureType\" id=\"featureType\" [(ngModel)]=\"recipe.feature_type\" class=\"form-control\" >\r\n                            <option value=\"{{featureType}}\" *ngFor=\"let featureType of featureTypes\">{{featureType}}</option>\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-2\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"budget\" class=\"filter-label\">Budget &lt; $</label>\r\n                        <select name=\"budget\" id=\"budget\" [(ngModel)]=\"recipe.cost\" class=\"form-control\" >\r\n                            <option value=\"{{budget}}\" *ngFor=\"let budget of budgets\">${{budget}}</option>\r\n                        </select>\r\n                    </div>\r\n                </div>   \r\n                <div class=\"col-2\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"groupSize\" class=\"filter-label\">Group size</label>\r\n                        <select name=\"groupSize\" id=\"groupSize\" [(ngModel)]=\"recipe.group\" class=\"form-control\" >\r\n                            <option value=\"{{groupSize}}\" *ngFor=\"let groupSize of groupSizes\">{{groupSize}}</option>\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-2\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"allergies\" class=\"filter-label\">Allergies</label>\r\n                        <select name=\"allergies\" id=\"allergies\" [(ngModel)]=\"recipe.restrictions\" class=\"form-control\" multiple=\"multiple\">\r\n                          <option value=\"{{allergy}}\" *ngFor=\"let allergy of allergies\">{{allergy}}</option>\r\n                        </select>\r\n                    </div>    \r\n                </div>  \r\n            </div>\r\n\r\n            <div class=\"form-group\">\r\n                <label for=\"name\" class=\"subtitle-text\">Recipe Name</label>\r\n                <input type=\"text\" name=\"name\" id=\"name\" [(ngModel)]=\"recipe.name\" class=\"form-control\" required>\r\n            </div>\r\n  \r\n            <label for=\"steps\" class=\"subtitle-text\">Cooking Steps</label>\r\n            <section class=\"container\" *ngFor=\"let step of recipe.steps; let i = index;\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-2\">\r\n                        <h4>Step {{i + 1}}</h4>\r\n                    </div>\r\n                    <div class=\"col\">\r\n                        <div class=\"form-group\">\r\n                            <input type=\"text\" class=\"form-control\" [(ngModel)]=\"step.step\" name=\"step_{{i + 1}}\"/>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-1\">\r\n                        <button type=\"button\" class=\"btn btn-danger\" (click)=\"removeStep(i)\">Remove</button>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n            <button type=\"button\" class=\"btn btn-block\" (click)=\"addStep()\">Add step</button>\r\n  \r\n            <br>\r\n\r\n            <label for=\"ingredients\" class=\"subtitle-text\">Cooking Ingredients</label>\r\n            <section class=\"container\" *ngFor=\"let item of recipe.ingredients; let i = index;\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-2\"></div>\r\n                    <div class=\"col\"><h5>Name</h5></div>\r\n                    <div class=\"col-2\"><h5>Quantity</h5></div>\r\n                    <div class=\"col-2\"><h5>Unit</h5></div>\r\n                    <div class=\"col-1\"></div>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <div class=\"col-2\">\r\n                        <h4>Item {{i + 1}}</h4>\r\n                    </div>\r\n                    <div class=\"col\">\r\n                        <div class=\"form-group\">\r\n                            <input type=\"text\" class=\"form-control\" [(ngModel)]=\"item.name\" name=\"name_{{i + 1}}\" />\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-2\">\r\n                        <div class=\"form-group\">\r\n                            <input type=\"text\" class=\"form-control\" [(ngModel)]=\"item.count\" name=\"count_{{i + 1}}\" />\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-2\">\r\n                        <div class=\"form-group\">\r\n                            <input type=\"text\" class=\"form-control\" [(ngModel)]=\"item.unit\" name=\"unit_{{i + 1}}\" />\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-1\">\r\n                        <button type=\"button\" class=\"btn btn-danger\" (click)=\"removeItem(i)\">Remove</button>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n            <button type=\"button\" class=\"btn btn-block\" (click)=\"addItem()\">Add ingredient</button>\r\n\r\n            <h1 class=\"subtitle-text\">Add image</h1>\r\n            <input #file type=\"file\" accept='image/*' (change)=\"preview(file.files); oneFileChanged($event)\" />\r\n            <br><br>\r\n            <div class=\"row pic-row\">\r\n                <div class=\"col\">\r\n                    <img [src]=\"imgURL\" class=\"pic-holder\" *ngIf=\"imgURL\">\r\n                </div>\r\n            </div>\r\n\r\n            <div *ngIf=\"(isUpdate && recipe.labelerrors && recipe.labelerrors[0].length > 0)\" >\r\n                <br><hr>\r\n                <label class=\"alert-label text-left warning\">Warning: {{recipe.labelerrors}}</label>\r\n                <button type=\"submit\" class=\"btn btn-lg submit-btn submit-center\" (click)=\"clearReport()\" title=\"update recipe\">Clear Warning</button>\r\n            </div>\r\n\r\n            <br><hr>\r\n\r\n            <div class=\"row\">\r\n                <div class=\"col text-center\">\r\n                \r\n                    <button type=\"submit\" *ngIf=\"!isUpdate\" class=\"btn btn-lg submit-btn submit-center\" (click)=\"createRecipe()\" title=\"submit new recipe\">Submit Recipe</button>\r\n                    <button type=\"submit\" *ngIf=\"isUpdate\" class=\"btn btn-lg submit-btn submit-center\" (click)=\"updateRecipe()\" title=\"update recipe\">Update Recipe</button>\r\n                    <br>\r\n                    <button type=\"submit\" *ngIf=\"isUpdate\" class=\"btn btn-lg submit-btn submit-center\" (click)=\"deleteRecipe()\" title=\"delete recipe\">Delete Recipe</button>\r\n                </div>          \r\n            </div>\r\n\r\n          </form>\r\n\r\n          <hr>\r\n          <!-- <p>\r\n            Current info：{{recipe | json}}\r\n          </p> -->\r\n\r\n    </div>\r\n          \r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable, of, Subject} from 'rxjs';\r\nimport { catchError, map, tap } from 'rxjs/operators';\r\nimport { IAuth } from '../interfaces/auth';\r\nimport { NormalResponse } from '../interfaces/INormalResponse';\r\nimport { ShareDataService } from './share-data.service';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LoginService {\r\n\r\n  // private base_api:string = \"http://localhost:8080/\";\r\n  private base_api:string = \"/\";\r\n\r\n  isLoggedIn: boolean;\r\n\r\n  loginStatusChange: Subject<boolean> = new Subject<boolean>();\r\n\r\n  private httpOptions = {\r\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n  };\r\n\r\n\r\n  constructor(private http: HttpClient,\r\n              private shareDataService: ShareDataService) { \r\n                this.loginStatusChange.subscribe((value)=>{\r\n                  this.isLoggedIn = value;\r\n                });\r\n              }\r\n\r\n  /**\r\n   * Login service returns the user id as a temporarty token\r\n   * @param auth username password combination\r\n   *\r\n   */\r\n  login(auth: IAuth): Observable<NormalResponse>{\r\n    let url = this.base_api + \"api/login\";\r\n    return this.http.post<NormalResponse>(url, auth, this.httpOptions).pipe(\r\n      catchError(this.handleError<NormalResponse>('user login failed')\r\n    ));\r\n  }\r\n\r\n  logOut():void{\r\n    this.shareDataService.clearData();\r\n  }\r\n\r\n  changeLoginStatus(state: boolean){\r\n    this.loginStatusChange.next(state);\r\n  }\r\n\r\n  /**\r\n   * Handle the error and return a human readable message to delegating component\r\n   * Return an empty IUser object to keep the app running.\r\n   * @param operation\r\n   * @param result\r\n   */\r\n  private handleError<T>(operation = 'operation', result?: T) {\r\n    return (error: any): Observable<T> => {\r\n\r\n      console.error(error); // log to console instead\r\n\r\n      // Let the app keep running by returning an empty result.\r\n      return of(result as T);\r\n    };\r\n  }\r\n\r\n\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { FoodAllergy } from '../../../enums/food-allergy.enum'\r\nimport { Cuisine } from '../../../enums/cuisine.enum'\r\nimport { Feature } from '../../../enums/feature.enum'\r\nimport { MealType } from '../../../enums/meal-type.enum'\r\nimport { IMealplan } from 'src/app/interfaces/imealplan';\r\nimport { IRecipe } from '../../../interfaces/irecipe'\r\nimport { MealplanService } from '../../../services/mealplan.service';\r\nimport { element } from 'protractor';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\n@Component({\r\n  selector: 'app-newplan',\r\n  templateUrl: './newplan.component.html',\r\n  styleUrls: ['./newplan.component.css']\r\n})\r\nexport class NewplanComponent implements OnInit {\r\n\r\n  public allergies = Object.keys(FoodAllergy);\r\n  public cuisineTypes = Object.keys(Cuisine);\r\n  public featureTypes = Object.keys(Feature);\r\n  public mealTypes = Object.keys(MealType);\r\n  public groupSizes = [1, 2, 3, 4, 5];\r\n  public budgets = [10, 20, 30, 40, 50, 60, 70, 80, 90, 100];\r\n\r\n  public mealplan: any = {\r\n    group: 0,\r\n    budget: 0,\r\n    date:0,\r\n    meal_type: MealType.None,\r\n    cuisine_type: Cuisine.None,\r\n    feature_type: Feature.None,\r\n    restrictions: [FoodAllergy.None],\r\n    recipe_list: []\r\n  }\r\n\r\n\r\n  public filter: any = {\r\n    group: 0,\r\n    budget: 0,\r\n    meal_type: MealType.None,\r\n    cuisine_type: Cuisine.None,\r\n    feature_type: Feature.None,\r\n    restrictions: [FoodAllergy.None]\r\n  }\r\n\r\n  // public recipequality: ;\r\n  public recipelist: any[] = []; \r\n  public gotrecipes: boolean;\r\n  public userId: number; // might be problematic\r\n\r\n  constructor(public mealplanService: MealplanService, \r\n              public route: ActivatedRoute,\r\n              public authService: AuthService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.gotrecipes = false;\r\n    // this.recipelist = [{ name: \"Hot Pepper and Onion Pizza\"},\r\n    //                     { name: \"Beef Gyros\"},]\r\n    this.authService.getSession().subscribe(\r\n      data =>{\r\n        this.userId = data.user_id;\r\n        console.log(\"Get response: \" + JSON.stringify(data));\r\n      }\r\n\r\n    );\r\n\r\n  }\r\n\r\n  getRecipesForCustomized(){\r\n    console.log(\"userid\" + this.userId);\r\n    var rxjsData = this.mealplanService.getRecipesByFilter(this.filter, this.userId);\r\n    this.mealplan.recipe_list = [];\r\n    rxjsData.subscribe((data) => {\r\n      this.recipelist = <IRecipe[]>data;\r\n      this.gotrecipes = true;\r\n      this.recipelist.forEach(element => {\r\n        // delete element.photo;\r\n        this.mealplan.recipe_list.push({recipe: element, quantity:0});\r\n      });\r\n\r\n      console.log('meal plan: ', this.mealplan);\r\n    }) \r\n  }\r\n\r\n  createMealPlan(){\r\n  \r\n    // this.mealplan.budget = this.filter.budget;\r\n    this.mealplan.group = this.filter.group;\r\n    // this.mealplan.meal_type = this.filter.meal_type;\r\n    // this.mealplan.cuisine_type = this.filter.cuisine_type;\r\n    // this.mealplan.feature_type = this.filter.feature_type;\r\n    this.gotrecipes = false;\r\n    this.mealplan.date = new Date();\r\n    this.mealplan.recipe_list.forEach((element:any) =>{\r\n      delete element.recipe.photo;\r\n    });\r\n    var rxjsData = this.mealplanService.postNewMealplan(this.mealplan, this.userId);\r\n    rxjsData.subscribe((data) => {\r\n      console.log(data);\r\n      alert(\"Success!\");\r\n    }) \r\n  }\r\n\r\n}\r\n","<div class=\"row\">\r\n\r\n    <div class=\"col-1\"></div>\r\n\r\n    <div class=\"col-11\">\r\n\r\n        <br>\r\n        <h1 class=\"page-text\">Tell us what you like :)</h1>\r\n        <hr>\r\n        <br>\r\n\r\n        <div class=\"row\">\r\n            <div class=\"col-2\">\r\n                <div class=\"form-group\">\r\n                    <label for=\"mealType\" class=\"filter-label\">Meal Type</label>\r\n                    <select name=\"mealType\" id=\"mealType\" [(ngModel)]=\"filter.meal_type\" class=\"form-control\">\r\n                      <option value=\"{{mealType}}\" *ngFor=\"let mealType of mealTypes\">{{mealType}}</option>\r\n                    </select>\r\n                </div>    \r\n            </div>   \r\n            <div class=\"col-2\">\r\n                <div class=\"form-group\">\r\n                    <label for=\"cuisineType\" class=\"filter-label\">Cuisine Type</label>\r\n                    <select name=\"cuisineType\" id=\"cuisineType\" [(ngModel)]=\"filter.cuisine_type\" class=\"form-control\" >\r\n                        <option value=\"{{cuisineType}}\" *ngFor=\"let cuisineType of cuisineTypes\">{{cuisineType}}</option>\r\n                    </select>\r\n                </div>\r\n            </div>   \r\n            <div class=\"col-2\">\r\n                <div class=\"form-group\">\r\n                    <label for=\"featureType\" class=\"filter-label\">Feature Type</label>\r\n                    <select name=\"featureType\" id=\"featureType\" [(ngModel)]=\"filter.feature_type\" class=\"form-control\" >\r\n                        <option value=\"{{featureType}}\" *ngFor=\"let featureType of featureTypes\">{{featureType}}</option>\r\n                    </select>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-2\">\r\n                <div class=\"form-group\">\r\n                    <label for=\"budget\" class=\"filter-label\">Budget &lt; $</label>\r\n                    <select name=\"budget\" id=\"budget\" [(ngModel)]=\"filter.budget\" class=\"form-control\" >\r\n                        <option value=\"{{budget}}\" *ngFor=\"let budget of budgets\">${{budget}}</option>\r\n                    </select>\r\n                </div>\r\n            </div>   \r\n            <div class=\"col-2\">\r\n                <div class=\"form-group\">\r\n                    <label for=\"groupSize\" class=\"filter-label\">Group size</label>\r\n                    <select name=\"groupSize\" id=\"groupSize\" [(ngModel)]=\"filter.group\" class=\"form-control\" >\r\n                        <option value=\"{{groupSize}}\" *ngFor=\"let groupSize of groupSizes\">{{groupSize}}</option>\r\n                    </select>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-2\">\r\n                <div class=\"form-group\">\r\n                    <label for=\"allergies\" class=\"filter-label\">Allergies</label>\r\n                    <select name=\"allergies\" id=\"allergies\" [(ngModel)]=\"filter.restrictions\" class=\"form-control\" multiple=\"multiple\">\r\n                      <option value=\"{{allergy}}\" *ngFor=\"let allergy of allergies\">{{allergy}}</option>\r\n                    </select>\r\n                </div>    \r\n            </div>  \r\n        </div>\r\n\r\n        <br>\r\n       \r\n        <br>\r\n        <div class=\"row\">\r\n            \r\n            <button type=\"submitbtn\" class=\"btn btn-block\" (click)=\"getRecipesForCustomized()\" title=\"get recommended recipes for planning\">Plan my meal</button>\r\n            \r\n            \r\n            \r\n        </div>\r\n        <br><br>\r\n        \r\n        <div *ngIf=\"gotrecipes\">\r\n            <hr>\r\n            <table class=\"tab table table-borderless\">\r\n                \r\n            \r\n                <tbody *ngFor=\"let item of mealplan.recipe_list; let key=index;\">\r\n                    <tr>\r\n                        <th scope=\"row\"><h4>{{ key + 1 }}</h4></th>\r\n                        <td><h4>{{ item.recipe.name }}</h4></td>\r\n                        <td>\r\n                            \r\n                            <img src=\"{{item.recipe.photo}}\" class=\"img-responsive recipe-pic\" alt=\"Image\">\r\n                          \r\n                        </td>\r\n                        <td><h4>${{item.recipe.cost}}</h4></td>\r\n                        <td>\r\n                            \r\n                            <button type=\"button\" class=\"btn-down sp-main count-btn btn-sm\" (click)=\"item.quantity=item.quantity-1;mealplan.budget=mealplan.budget-item.recipe.cost\">-</button>\r\n                            <input class=\"text-center\" max=\"17\" min=\"1\" value=\"{{item.quantity}}\" [(ngModel)]=\"item.quantity\" type=\"text\" class=\"readonly-input\" readonly=\"\">\r\n                            <button type=\"button\" class=\"btn-up sp-main count-btn btn-sm\" (click)=\"item.quantity=item.quantity+1;mealplan.budget=mealplan.budget+item.recipe.cost\">+</button>\r\n                            \r\n                        </td>\r\n                        \r\n                       \r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n\r\n            <div class = \"row-fluid text-center\">\r\n                <label for=\"name\" class=\"subtitle-text\">Total Cost</label>\r\n            </div>\r\n            <div class = \"row-fluid text-center\">\r\n                <input type=\"text\" name=\"name\" id=\"name\" class=\"input-container text-center\" [(ngModel)]=\"mealplan.budget\" class=\"readonly-input\"readonly=\"\">\r\n            </div>\r\n            <hr>\r\n            <div class = \"row\">\r\n                <div class=\"col text-center\">\r\n                <button type=\"submit\" class=\"btn btn-lg submit-btn submit-center\" title=\"confirm recipes\" (click)=\"createMealPlan()\">Confirm</button>\r\n                </div>\r\n            </div>\r\n            <hr>\r\n        </div>\r\n\r\n        <br>\r\n       \r\n\r\n    </div>\r\n          \r\n</div>","export enum RecipeTag {\n    None = \"None\",\n    Popular = \"Popular\",\n    GoldenRecipe = \"GoldenRecipe\",\n    CostEffective = \"CostEffective\"\n}\n","export enum FoodAllergy {\n    None = \"None\",\n    Corn = \"Corn\", \n    Egg = \"Egg\", \n    Fish = \"Fish\", \n    Meat = \"Meat\", \n    Milk = \"Milk\", \n    Peanut = \"Peanut\", \n    Shellfish = \"Shellfish\", \n    Soy = \"Soy\", \n    TreeNut = \"TreeNut\", \n    Wheat = \"Wheat\", \n    FPIES = \"FPIES\"\n}\n","import { Component, OnInit } from '@angular/core';\r\nimport { IMealplan } from 'src/app/interfaces/imealplan';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\n\r\nimport { MealplanService } from '../../../services/mealplan.service';\r\n\r\n@Component({\r\n  selector: 'app-oldplan',\r\n  templateUrl: './oldplan.component.html',\r\n  styleUrls: ['./oldplan.component.css']\r\n})\r\nexport class OldplanComponent implements OnInit {\r\n\r\n  public mealplans: IMealplan[] = [];\r\n  public userId: number;\r\n\r\n  \r\n  constructor(public mealplan:MealplanService, public authService: AuthService){}\r\n\r\n\r\n  ngOnInit(): void {\r\n    console.log(this.userId + \" init history\");\r\n    this.authService.getSession().subscribe(\r\n      data =>{\r\n        this.userId = data.user_id;\r\n        console.log(\"Get response: \" + JSON.stringify(data));\r\n        console.log(\"this is my user id: \" + this.userId);\r\n\r\n        this.mealplan.getAllMealPlansForUser(this.userId)\r\n          .subscribe((result)=>{\r\n            console.log(result);\r\n            this.mealplans = <IMealplan[]>result;\r\n            console.log(this.mealplans);\r\n        })\r\n      }\r\n\r\n    );\r\n  }\r\n\r\n}\r\n","<br>\r\n    <table class=\"tab table table-borderless\">\r\n        <thead>\r\n            <tr>\r\n                <th scope=\"col\">#</th>\r\n                <th scope=\"col\">Creation Date/Time</th>\r\n                <th scope=\"col\">Budget</th>\r\n                <th scope=\"col\">Group</th>\r\n                <th scope=\"col\">Recipe List</th>\r\n                <th scope=\"col\">Shopping List</th>\r\n            </tr>\r\n        </thead>\r\n\r\n        <tbody *ngFor=\"let item of mealplans; let key=index;\">\r\n            <tr>\r\n                <th scope=\"row\">{{ key + 1 }}</th>\r\n                <td>{{ item.date | date:'medium'}}</td>\r\n                <td>{{ item.budget }}</td>\r\n                <td>{{ item.group }}</td>\r\n                <td>\r\n                    <button class=\"btn btn-sm submit-btn\">\r\n                        <a class=\"nav-link\" [routerLink]=\"['.', item.mealplan_id, 'recipelist']\">Check</a>\r\n                    </button>\r\n                </td>\r\n                <td>\r\n                    <button class=\"btn btn-sm submit-btn\">\r\n                        <a class=\"nav-link\" [routerLink]=\"['.', item.mealplan_id, 'shoppinglist']\">Check</a>\r\n                    </button>\r\n                </td>\r\n            </tr>\r\n        </tbody>\r\n\r\n    </table>\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpParams } from \"@angular/common/http\";\r\nimport { Observable } from 'rxjs';\r\nimport { IMealplan } from '../interfaces/imealplan';\r\nimport { IRecipe } from '../interfaces/irecipe';\r\nimport { FoodAllergy } from '../enums/food-allergy.enum'\r\nimport { ShareDataService } from './share-data.service';\r\nimport { AuthService } from './auth.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MealplanService {\r\n  // hostUrl: string = 'http://localhost:8080/api/';\r\n  hostUrl: string = '/api/';\r\n  // userId: number;\r\n\r\n  constructor(public http:HttpClient){}\r\n        \r\n  getAllMealPlansForUser(userId: number){\r\n    // this.userId = this.shareDataService.getData('userid');\r\n    return new Observable((observer) => {\r\n      this.http.get<IMealplan[]>(this.hostUrl + 'mealplan/' + userId).subscribe((res:any) =>{\r\n      observer.next(res);\r\n      });\r\n\r\n    })\r\n\r\n  }\r\n  getRecipesByFilter(filter:any, userId: number){\r\n    //const httpOptions = {headers: new HttpHeaders({ 'Content-Type': 'application/json' })};\r\n    console.log(filter);\r\n    let params = new HttpParams();\r\n    params = params.append('budget',filter.budget);\r\n    params = params.append('group', filter.group);\r\n    params = params.append('meal_type', filter.meal_type);\r\n    params = params.append('cuisine_type', filter.cuisine_type);\r\n    params = params.append('feature_type', filter.feature_type);\r\n    filter.restrictions.forEach((element:any) => {\r\n        params = params.append(`restrictions[]`, element);\r\n    });\r\n    // this.userId = this.shareDataService.getData('userid');\r\n    return new Observable((observer) => {\r\n  \r\n      this.http.get<IRecipe[]>(this.hostUrl + 'mealplan/' + userId + '/customization/getrecipelist', {params:params}).subscribe((res:any) => {\r\n        observer.next(res);\r\n      });\r\n    })\r\n  }\r\n  postNewMealplan(mealplan:any, userId: number){\r\n    const httpOptions = {headers: new HttpHeaders({'content-Type': 'application/json' })};\r\n    console.log(mealplan);\r\n    // this.userId = this.shareDataService.getData('userid');\r\n    return new Observable((observer) => {\r\n      this.http.post(this.hostUrl + 'mealplan/' + userId + '/customization/', mealplan, httpOptions).subscribe((res) =>{\r\n        observer.next(res);\r\n      });\r\n    })\r\n  }\r\n\r\n  getRecipeListByMealplanID(mealplanId: string, userId: number) {\r\n    // this.userId = this.shareDataService.getData('userid');\r\n    return new Observable((observer) => {\r\n      this.http.get<IRecipe[]>(this.hostUrl + 'mealplan/' + userId + '/plans/' + mealplanId + '/recipelist').subscribe((res:any) => {\r\n        observer.next(res);\r\n      });\r\n    })\r\n  }\r\n\r\n  getShoppingListByMealplanID(mealplanId: string, userId: number) {\r\n    // this.userId = this.shareDataService.getData('userid');\r\n    return new Observable((observer) => {\r\n      this.http.get<any[]>(this.hostUrl + 'mealplan/' + userId + '/plans/' + mealplanId + '/shoppinglist').subscribe((res:any) => {\r\n        observer.next(res);\r\n      });\r\n    })\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-ads',\n  templateUrl: './ads.component.html',\n  styleUrls: ['./ads.component.css']\n})\nexport class AdsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","\r\n    <br><br>\r\n    <div class=\"row\">\r\n        <img src=\"assets/images/ads_1.jpg\" class=\"img-responsive ad-pic\" alt=\"Image\">\r\n    </div>\r\n\r\n    <br><br>\r\n    <div class=\"row\">\r\n        <img src=\"assets/images/ads_3.jpg\" class=\"img-responsive ad-pic\" alt=\"Image\">\r\n    </div>\r\n\r\n    <br><br>\r\n    <div class=\"row\">\r\n        <img src=\"assets/images/ads_4.jpg\" class=\"img-responsive ad-pic\" alt=\"Image\">\r\n    </div>\r\n\r\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'recipe-smart-client';\n}\n","<app-header-base></app-header-base>\r\n\r\n<router-outlet></router-outlet>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FoodAllergy } from '../../enums/food-allergy.enum'\r\nimport { Cuisine } from '../../enums/cuisine.enum'\r\nimport { Feature } from '../../enums/feature.enum'\r\nimport { MealType } from '../../enums/meal-type.enum'\r\nimport { RecipeService } from '../../services/recipe.service';\r\n\r\n@Component({\r\n  selector: 'app-recipes',\r\n  templateUrl: './recipes.component.html',\r\n  styleUrls: ['./recipes.component.css']\r\n})\r\nexport class RecipesComponent implements OnInit {\r\n\r\n  public allergies = Object.keys(FoodAllergy).filter(key => key != \"None\");\r\n  public cuisineTypes = Object.keys(Cuisine).filter(key => key != \"None\");\r\n  public featureTypes = Object.keys(Feature).filter(key => key != \"None\");\r\n  public mealTypes = Object.keys(MealType).filter(key => key != \"None\");\r\n  public groupSizes = [1, 2, 3, 4, 5];\r\n  public budgets = [10, 20, 30, 40, 50, 60, 70, 80, 90, 100];\r\n\r\n  public filter: any = {\r\n    meal_types: [],\r\n    feature_types: [],\r\n    cuisine_types: [],\r\n    name: '',\r\n    cost: 100\r\n  };\r\n\r\n  public recipes: any;\r\n\r\n  constructor(public recipeService:RecipeService) { }\r\n\r\n  ngOnInit(): void {\r\n    \r\n    this.showAllRecipes();\r\n\r\n  }\r\n\r\n  showAllRecipes() {\r\n    \r\n    var rxjsData = this.recipeService.getAllRecipes();\r\n\r\n    rxjsData.subscribe((data) => {\r\n      this.recipes = data;\r\n    })    \r\n  }\r\n\r\n  filterRecipes(filter: any) {\r\n\r\n    this.filter.meal_types\r\n    \r\n    var rxjsData = this.recipeService.getRecipesByFilter(filter);\r\n\r\n    rxjsData.subscribe((data) => {\r\n      this.recipes = data;\r\n    })   \r\n  }\r\n\r\n}\r\n","<div class=\"row\">\r\n     <!-- Left side Ads -->\r\n     <div class=\"col-2 align-center\">\r\n        <app-ads></app-ads>\r\n    </div>\r\n\r\n    <div class=\"col-8\">\r\n\r\n        <br><br>\r\n\r\n         <!-- Filters -->\r\n        <div class=\"row\">\r\n\r\n            <div class=\"col\">\r\n                <div ngbDropdown class=\"d-inline-block\">\r\n                    <button class=\"btn filterbtn\" id=\"dropdownBasic1\" ngbDropdownToggle>Meal Type</button>\r\n                    <select ngbDropdownMenu name=\"mealType\" id=\"mealType\" [(ngModel)]=\"filter.meal_types\" class=\"form-control\" multiple=\"multiple\">\r\n                        <option value=\"{{mealType}}\" *ngFor=\"let mealType of mealTypes\">{{mealType}}</option>\r\n                    </select>\r\n                </div>\r\n            </div>\r\n            \r\n            <div class=\"col\">\r\n                <div ngbDropdown class=\"d-inline-block\">\r\n                    <button class=\"btn filterbtn\" id=\"dropdownBasic1\" ngbDropdownToggle>Cuisine</button>\r\n                    <select ngbDropdownMenu name=\"cuisineType\" id=\"cuisineType\" [(ngModel)]=\"filter.cuisine_types\" class=\"form-control\" multiple=\"multiple\">\r\n                        <option value=\"{{cuisineType}}\" *ngFor=\"let cuisineType of cuisineTypes\">{{cuisineType}}</option>\r\n                    </select>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"col\">\r\n                <div ngbDropdown class=\"d-inline-block\">\r\n                    <button class=\"btn filterbtn\" id=\"dropdownBasic1\" ngbDropdownToggle>Feature</button>\r\n                    <select ngbDropdownMenu name=\"featureType\" id=\"featureType\" [(ngModel)]=\"filter.feature_types\" class=\"form-control\" multiple=\"multiple\">\r\n                        <option value=\"{{featureType}}\" *ngFor=\"let featureType of featureTypes\">{{featureType}}</option>\r\n                    </select>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"col\">\r\n                <div ngbDropdown class=\"d-inline-block\">\r\n                    <button class=\"btn filterbtn\" id=\"dropdownBasic1\" ngbDropdownToggle>Budget &lt; $</button>\r\n                    <select ngbDropdownMenu name=\"budget\" id=\"budget\" [(ngModel)]=\"filter.cost\" class=\"form-control\">\r\n                        <option value=\"{{budget}}\" *ngFor=\"let budget of budgets\">{{budget}}</option>\r\n                    </select>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"col\">\r\n                <input type=\"text\" name=\"name\" id=\"name\" [(ngModel)]=\"filter.name\" class=\"filter-input form-control\" placeholder=\"Search by name\">\r\n            </div>\r\n\r\n            <div class=\"col\">\r\n                <button type=\"submit\" class=\"btn filterbtn\" (click)=\"filterRecipes(filter)\" title=\"filter recipes\">Show</button>\r\n            </div>\r\n\r\n        </div>\r\n\r\n        <br><hr><br>\r\n\r\n        <!-- Contents -->\r\n        <div class=\"container-fluid bg-3 text-center\">              \r\n            <div class=\"row picrow\">\r\n                <div class=\"col-4\" *ngFor=\"let item of recipes\">\r\n                    <a [routerLink]=\"['.', item.recipe_id]\">\r\n                        <img src=\"{{item.photo}}\" class=\"img-responsive recipe-pic\" alt=\"Image\">\r\n                    </a>\r\n                    <p class=\"recipe-name\">{{ item.name }}</p>\r\n                </div>\r\n            </div>           \r\n        </div>\r\n\r\n    </div>\r\n\r\n     <!-- Right side Ads -->\r\n     <div class=\"col-2 align-center\">\r\n        <app-ads></app-ads>\r\n    </div>\r\n</div>\r\n\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { IAuth } from 'src/app/interfaces/auth';\r\nimport { SimpleResponse } from 'src/app/interfaces/ISimpleResponse';\r\nimport { LoginService } from '../../services/login.service'\r\nimport { ShareDataService } from '../../services/share-data.service'\r\nimport { HeaderBaseComponent } from '../header-base/header-base.component'\r\nimport { AuthService } from 'src/app/services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\n\r\n/**\r\n * This service send login request to backend and calls for storeage service\r\n * storage service is exposed for other component to use\r\n */\r\nexport class LoginComponent implements OnInit {\r\n\r\n  // @Input()\r\n  // auth: IAuth = {\r\n  //   name: \"test username\",\r\n  //   password: \"test password\"\r\n  // };\r\n\r\n  isLoggedIn: boolean = false;\r\n\r\n  constructor(public authService: AuthService) {\r\n    \r\n  } \r\n\r\n  ngOnInit(): void {\r\n    this.authService.getStatus().subscribe(res => {\r\n      console.log(\"/status:\" + res); \r\n      console.log(\"/status type:\" + typeof(res));\r\n      if(res){\r\n        this.authService.getSession().subscribe(data => {\r\n          if(data.user_id){\r\n            this.isLoggedIn = true; \r\n          }\r\n        })\r\n      }\r\n    });\r\n  }\r\n\r\n  // login():void{\r\n\r\n  //   //login needs to get a full user object back and store it in the local cache\r\n  //   this.login_service.login(this.auth).subscribe(\r\n  //     res => {\r\n\r\n  //       if(res.ret_code == 0){\r\n  //         this.shared_service.setData(\"userid\", res.userid);\r\n  //         this.shared_service.setData(\"isLoggedIn\", true);\r\n          \r\n  //         console.log(res.ret_msg);\r\n  //         this.isLoggedIn = true;\r\n  //         this.login_service.changeLoginStatus(true);\r\n  //         HeaderBaseComponent.setLoginStatus(true);\r\n  //         alert(\"Logged in Successfully\");\r\n\r\n  //       }\r\n  //       else{\r\n  //         alert(res.ret_msg);\r\n\r\n  //       }\r\n        \r\n  //     }\r\n\r\n  //   );\r\n  // }\r\n\r\n  // logOut():void{\r\n  //   this.login_service.logOut();\r\n  //   console.log(\"User logged out, states cleared\");\r\n  //   this.isLoggedIn = false;\r\n  //   HeaderBaseComponent.setLoginStatus(false);\r\n  //   alert(\"Logged out successfully.\")\r\n  // }\r\n\r\n}\r\n","<link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\">\r\n<link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\">\r\n<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/1.12.4/jquery.min.js\"></script>\r\n<script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js\"></script>\r\n\r\n\r\n<!-- *ngif = \"isLoggedIn == false\" -->\r\n\r\n    <div class=\"login-form\">\r\n        <form>\r\n            <h2 class=\"text-center\">Log in</h2>\r\n            <!-- <div class=\"form-group\">\r\n                <input type=\"text\" class=\"form-control\" placeholder=\"Username\" required=\"required\"\r\n                [(ngModel)]=\"auth.name\" name=\"username\">\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <input type=\"password\" class=\"form-control\" placeholder=\"Password\" required=\"required\"\r\n                [(ngModel)]=\"auth.password\" name = \"password\">\r\n            </div> -->\r\n            <br>\r\n            <div class=\"form-group\">\r\n                <!-- <button type=\"submit\" class=\"btn btn-block\" (click)=\"login()\">Log in</button> -->\r\n                <a *ngIf=\"!isLoggedIn\" role=\"button\" class=\"btn btn-block\" href=\"/auth/google\">Google Login</a>\r\n                <a *ngIf=\"isLoggedIn\" role=\"button\" class=\"btn btn-block\" href=\"/logout\">Log Out</a>\r\n            </div>\r\n    \r\n        </form>\r\n    \r\n        <!-- <p class=\"text-center\"><a href=\"#\" [routerLink]=\"['../sign-up']\">Create an Account</a></p> -->\r\n    </div>\r\n\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from \"@angular/forms\";\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { HttpClientModule } from \"@angular/common/http\";\r\n\r\nimport { AdsComponent } from './components/ads/ads.component';\r\nimport { HeaderBaseComponent } from './components/header-base/header-base.component';\r\nimport { RecipesComponent } from './components/recipes/recipes.component';\r\nimport { MealplanComponent } from './components/mealplan/mealplan.component';\r\nimport { NewplanComponent } from './components/mealplan/newplan/newplan.component';\r\nimport { OldplanComponent } from './components/mealplan/oldplan/oldplan.component';\r\nimport { MyrecipeComponent } from './components/myrecipe/myrecipe.component';\r\nimport { OldrecipeComponent } from './components/myrecipe/oldrecipe/oldrecipe.component';\r\nimport { NewrecipeComponent } from './components/myrecipe/newrecipe/newrecipe.component';\r\nimport { UserProfilesComponent } from './components/user-profiles/user-profiles.component';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { RecipeContentComponent } from './components/recipe-content/recipe-content.component';\r\nimport { ShoppinglistComponent } from './components/mealplan/oldplan/shoppinglist/shoppinglist.component';\r\nimport { RecipelistComponent } from './components/mealplan/oldplan/recipelist/recipelist.component';\r\n\r\n\r\nimport { LoginService } from './services/login.service';\r\nimport { MealplanService } from './services/mealplan.service';\r\nimport { RecipeService } from './services/recipe.service';\r\nimport { ShareDataService } from './services/share-data.service';\r\nimport { UserService } from './services/user.service';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    RecipesComponent,\r\n    AdsComponent,\r\n    HeaderBaseComponent,\r\n    MealplanComponent,\r\n    NewplanComponent,\r\n    OldplanComponent,\r\n    MyrecipeComponent,\r\n    OldrecipeComponent,\r\n    NewrecipeComponent,\r\n    UserProfilesComponent,\r\n    LoginComponent,\r\n    RecipeContentComponent,\r\n    ShoppinglistComponent,\r\n    RecipelistComponent\r\n\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    NgbModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    HttpClientModule,\r\n    CommonModule\r\n  ],\r\n  providers: [\r\n    LoginService,\r\n    MealplanService,\r\n    RecipeService,\r\n    ShareDataService,\r\n    UserService\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpParams } from \"@angular/common/http\";\r\nimport { Observable } from 'rxjs';\r\nimport { IRecipe } from '../interfaces/irecipe';\r\nimport { AuthService } from './auth.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RecipeService {\r\n\r\n  // hostUrl: string = 'http://localhost:8080/api/';\r\n  hostUrl: string = '/api/';\r\n  \r\n  \r\n  constructor(public http: HttpClient) { }\r\n\r\n  getAllRecipes() {\r\n    return new Observable((observer) => {\r\n      this.http.get<IRecipe[]>(this.hostUrl + 'recipes').subscribe((res:any) => {\r\n        observer.next(res);\r\n      });\r\n    })\r\n  }\r\n\r\n  getRecipeByID(recipeId: string) {\r\n    return new Observable((observer) => {\r\n      this.http.get<IRecipe>(this.hostUrl + 'recipes/' + recipeId).subscribe((res:any) => {\r\n        observer.next(res);\r\n      });\r\n    })\r\n  }\r\n\r\n  getRecipesByMemberID(userId: number) {\r\n\r\n    return new Observable((observer) => {\r\n      this.http.get<IRecipe[]>(this.hostUrl + 'myrecipes/' + userId).subscribe((res:any) => {\r\n        observer.next(res);\r\n      });\r\n    })\r\n  }\r\n\r\n  getRecipesByFilter(filter: any) {\r\n    return new Observable((observer) => {\r\n      this.http.get<IRecipe[]>(this.hostUrl + 'recipes', {params: filter}).subscribe((res:any) => {\r\n        observer.next(res);\r\n      });\r\n    })\r\n  }\r\n\r\n  postNewRecipe(recipe: any, userId: number) {\r\n    const httpOptions = {headers: new HttpHeaders({ 'Content-Type': 'application/json' })};\r\n\r\n    return new Observable((observer) => {\r\n      \r\n      recipe.member_id = userId;\r\n      this.http.post(this.hostUrl + 'myrecipes/' + userId, recipe, httpOptions).subscribe((res) => {\r\n        observer.next(res);\r\n      });\r\n    })\r\n  }\r\n\r\n  updateOneRecipe(recipe: any, userId: number) {\r\n    const httpOptions = {headers: new HttpHeaders({ 'Content-Type': 'application/json' })};\r\n\r\n    return new Observable((observer) => {\r\n      \r\n      this.http.put(this.hostUrl + 'myrecipes/' + userId + '/' + recipe.recipe_id, recipe, httpOptions).subscribe((res) => {\r\n        observer.next(res);\r\n      });\r\n    })\r\n  }\r\n\r\n  deleteOneRecipe(recipe: any, userId: number) {\r\n    const httpOptions = {headers: new HttpHeaders({ 'Content-Type': 'application/json' })};\r\n\r\n    return new Observable((observer) => {\r\n      \r\n      this.http.delete(this.hostUrl + 'myrecipes/' + userId + '/' + recipe.recipe_id, httpOptions).subscribe((res) => {\r\n        observer.next(res);\r\n      });\r\n    })\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\nimport { RecipeService } from '../../../services/recipe.service'\r\n\r\n@Component({\r\n  selector: 'app-oldrecipe',\r\n  templateUrl: './oldrecipe.component.html',\r\n  styleUrls: ['./oldrecipe.component.css']\r\n})\r\nexport class OldrecipeComponent implements OnInit {\r\n\r\n  public myrecipes: any;\r\n  public hostUrl: string;\r\n  public userId: number;\r\n\r\n  constructor(public recipeService: RecipeService,\r\n              public authService: AuthService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.hostUrl = this.recipeService.hostUrl;\r\n    this.authService.getSession().subscribe(\r\n      data =>{\r\n          this.userId = data.user_id;\r\n          console.log(JSON.stringify(data));\r\n          this.getMyRecipes();\r\n      }\r\n    );\r\n    \r\n  }\r\n\r\n  getMyRecipes() {\r\n  \r\n    var rxjsData = this.recipeService.getRecipesByMemberID(this.userId);\r\n\r\n    rxjsData.subscribe((data) => {\r\n      this.myrecipes = data;\r\n    })    \r\n  }\r\n\r\n}\r\n","<br><br>\n<div class=\"row\">\n    <div class=\"col-1\"></div>\n\n    <!-- Contents -->\n    <div class=\"container-fluid bg-3 text-center\">              \n        <div class=\"row picrow\">\n            <div class=\"col-4\" *ngFor=\"let item of myrecipes\">\n                <a [routerLink]=\"['.', item.recipe_id]\">\n                    <img src=\"{{item.photo}}\" class=\"img-responsive recipe-pic\" alt=\"Image\">\n                </a>\n                <p class=\"recipe-name\">\n                    {{ item.name }}\n                    <span *ngIf=\"(item.labelerrors && item.labelerrors[0].length > 0)\" style=\"color:red\"> <b>Mislabeled!</b></span>\n                </p>\n            </div>\n        </div>           \n    </div>\n\n    <div class=\"col-2\"></div>\n</div>\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { MealplanService } from '../../../../services/mealplan.service';\r\nimport { IIngredientList } from '../../../../interfaces/iingredientlist'\r\nimport { AuthService } from 'src/app/services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-shoppinglist',\r\n  templateUrl: './shoppinglist.component.html',\r\n  styleUrls: ['./shoppinglist.component.css']\r\n})\r\nexport class ShoppinglistComponent implements OnInit {\r\n\r\n  public ingredient_list: IIngredientList[];\r\n\r\n  public mealplanId: string;\r\n\r\n  public userId: number;\r\n\r\n  constructor(public recipeService: MealplanService, \r\n              public route: ActivatedRoute,\r\n              public authService: AuthService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.authService.getSession().subscribe(\r\n      data =>{\r\n        this.userId = data.user_id;\r\n        console.log(\"Get response: \" + JSON.stringify(data));\r\n        console.log(\"user \" + this.userId + \" getting shoppinglist\");\r\n        this.mealplanId = this.route.snapshot.params['mealplanId'];\r\n        this.getShoppingList();\r\n      }\r\n\r\n    );\r\n\r\n    \r\n  }\r\n\r\n  getShoppingList() {\r\n    var rxjsData = this.recipeService.getShoppingListByMealplanID(this.mealplanId, this.userId);\r\n    rxjsData.subscribe((data: any) => {\r\n      this.ingredient_list = <IIngredientList[]>(data.shopping_list);\r\n    })\r\n  }\r\n\r\n  removeItem(i: number) {\r\n    this.ingredient_list.splice(i, 1);\r\n  }\r\n\r\n  addItem() {\r\n    this.ingredient_list.push({ name: '', unit: '', count: 0 });\r\n  }\r\n\r\n}\r\n","<br>\n<h1 class=\"subtitle-text\">My Shopping List</h1>\n\n<section class=\"container tab\">\n    <div class=\"row\">\n        <div class=\"col-2\">#</div>\n        <div class=\"col\"><h5>Ingredient</h5></div>\n        <div class=\"col-2\"><h5>Quantity</h5></div>\n        <div class=\"col-2\"><h5>Unit</h5></div>\n        <div class=\"col-1\"><h5>Done</h5></div>\n    </div>\n</section>\n<section class=\"container tab\" *ngFor=\"let item of ingredient_list; let i = index;\">\n    <div class=\"row\">\n        <div class=\"col-2\">\n            <h4>Item {{i + 1}}</h4>\n        </div>\n        <div class=\"col\">\n            <div class=\"form-group\">\n                <input type=\"text\" class=\"form-control no-border\" [(ngModel)]=\"item.name\" name=\"name_{{i + 1}}\" />\n            </div>\n        </div>\n        <div class=\"col-2\">\n            <div class=\"form-group\">\n                <input type=\"text\" class=\"form-control no-border\" [(ngModel)]=\"item.count\" name=\"count_{{i + 1}}\" />\n            </div>\n        </div>\n        <div class=\"col-2\">\n            <div class=\"form-group\">\n                <input type=\"text\" class=\"form-control no-border\" [(ngModel)]=\"item.unit\" name=\"unit_{{i + 1}}\" />\n            </div>\n        </div>\n        <div class=\"col-1\">\n            <button type=\"button\" class=\"btn btn-danger\" (click)=\"removeItem(i)\">Remove</button>\n        </div>\n    </div>\n</section>\n<button type=\"button\" class=\"btn btn-block\" (click)=\"addItem()\">Add ingredient</button>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { RecipeService } from '../../services/recipe.service';\n\n@Component({\n  selector: 'app-recipe-content',\n  templateUrl: './recipe-content.component.html',\n  styleUrls: ['./recipe-content.component.css']\n})\nexport class RecipeContentComponent implements OnInit {\n\n  public recipe: any = {\n    name: \"\",\n    image: \"\",\n    likes: 0,\n    group: 0\n  }\n\n  public isMember: boolean;\n  public hasAds: boolean;\n\n  public labels: any = [\n    \"Wrong feature type\",\n    \"Wrong cuisine type\",\n    \"Wrong meal type\",\n    \"Wrong food allergy\",\n    \"Wrong budget/cost\",\n    \"Wrong group size\"\n  ]\n\n  constructor(public route: ActivatedRoute, public recipeService: RecipeService) { }\n\n  ngOnInit(): void {\n    this.route.params.subscribe((value) => {\n      this.getRecipeContent(value.recipeId);\n    })\n\n    this.isMember = this.route.snapshot.data.isMember;\n    this.hasAds = this.route.snapshot.data.hasAds;\n  }\n\n  getRecipeContent(recipeId: string) {\n    var rxjsData = this.recipeService.getRecipeByID(recipeId);\n    rxjsData.subscribe((data) => {\n      this.recipe = data;\n    })    \n  }\n\n  reportMislabeling(){\n    console.log(this.recipe.errors);\n    var rxjsData = this.recipeService.updateOneRecipe(this.recipe, this.recipe.userId);\n    rxjsData.subscribe((data) => {\n      console.log(data);\n      alert(\"Success!\");\n    }) \n  }\n\n}\n","<div class=\"row\">\r\n\r\n    <div class=\"col-2\" *ngIf=\"hasAds\">\r\n        <app-ads></app-ads>\r\n    </div>\r\n\r\n    <div class=\"col\">\r\n\r\n        <br>\r\n        <h1 class=\"page-text\">{{recipe.name}}</h1>\r\n\r\n        <br>\r\n\r\n        <div class=\"row\">\r\n            <div class=\"col-5\">\r\n                <div class=\"text-center\">\r\n                    <img src=\"{{recipe.photo}}\">\r\n                </div>\r\n            </div>\r\n            <div class=\"col\"></div>\r\n            <div class=\"col-6\">\r\n                <div class=\"row\">\r\n                    <div class=\"col\">\r\n                        <label class=\"filter-label\" *ngIf=\"recipe.meal_type && recipe.meal_type !== 'None'\">{{recipe.meal_type}}</label>\r\n                    </div>\r\n                    <div class=\"col\">\r\n                        <label class=\"filter-label\" *ngIf=\"recipe.cuisine_type && recipe.cuisine_type !== 'None'\">{{recipe.cuisine_type}}</label>\r\n                    </div>\r\n                    <div class=\"col\">\r\n                        <label class=\"filter-label\" *ngIf=\"recipe.feature_type && recipe.feature_type !== 'None'\">{{recipe.feature_type}}</label>\r\n                    </div>\r\n                </div>\r\n                <br>\r\n                <div class=\"row\">\r\n                    <div class=\"col\">\r\n                        <label class=\"value-label\">Serves <br> {{recipe.group}}</label>\r\n                    </div>\r\n                    <div class=\"col\">\r\n                        <label class=\"value-label\">Budget <br> &lt; ${{recipe.cost}}</label>\r\n                    </div>\r\n                    <div class=\"col\">\r\n                        <label class=\"value-label\" *ngIf=\"recipe.recipe_tags && recipe.recipe_tags[0] !== 'None'\">Recipe tag {{recipe.recipe_tags[0]}}</label>\r\n                    </div>\r\n                </div>\r\n                <br>\r\n                <div class=\"row\">\r\n                    <div class=\"col\">\r\n                        <label class=\"alert-label text-left warning\" *ngIf=\"recipe.restrictions\">Contains (food allergy): {{recipe.restrictions}}</label>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <hr>\r\n\r\n        <div class=\"row\">\r\n            <div class=\"col-9\">\r\n                <h1 class=\"subtitle-text\">Cooking steps</h1>\r\n                <hr>\r\n                <table class=\"tab table table-borderless\">\r\n                    <tbody *ngFor=\"let item of recipe.steps; let key=index;\">\r\n                        <tr>\r\n                            <th scope=\"row\">step {{ key + 1 }}</th>\r\n                            <td>{{ item.step }}</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n\r\n            </div>\r\n            <hr>\r\n            <div class=\"col-9\">\r\n                <hr>\r\n                <h1 class=\"subtitle-text\">Ingredients</h1>\r\n                <hr>\r\n                <table class=\"tab table table-borderless\">\r\n                    <tbody *ngFor=\"let item of recipe.ingredients; let key=index;\">\r\n                        <tr>\r\n                            <th scope=\"row\">{{ key + 1 }}</th>\r\n                            <td>{{ item.name }}</td>\r\n                            <td>{{ item.count }}</td>\r\n                            <td>{{ item.unit }}</td>\r\n                        </tr>\r\n                    </tbody>\r\n        \r\n                </table>\r\n\r\n            </div>\r\n\r\n        </div>\r\n\r\n        <hr>\r\n        <label class=\"alert-label text-left warning\" *ngIf=\"recipe.labelerrors && recipe.labelerrors[0].length > 0\">Warning: {{recipe.labelerrors}} <br></label>\r\n        <br>\r\n\r\n        <button type=\"button\" class=\"btn btn-block\" *ngIf=\"isMember\" [routerLink]=\"['./edit']\">Edit Recipe</button>\r\n        \r\n        <div *ngIf=\"!isMember\">\r\n            <br>\r\n            <h3>If there are wrong tags/labels, feel free to report!</h3>\r\n        \r\n            <div class=\"form-group\">\r\n                <select name=\"label\" id=\"label\" [(ngModel)]=\"recipe.labelerrors\" class=\"form-control\" multiple=\"multiple\">\r\n                    <option value=\"{{label}}\" *ngFor=\"let label of labels\">{{label}}</option>\r\n                </select>\r\n            </div>\r\n            <button type=\"submit\" class=\"btn btn-block\" (click)=\"reportMislabeling()\">Report</button>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"col-2\" *ngIf=\"hasAds\">\r\n        <app-ads></app-ads>\r\n    </div>\r\n          \r\n</div>\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { IUser } from '../interfaces/IUser'\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n\r\n  // private base_url:string = \"http://localhost:8080/auth/user\";\r\n\r\n  private base_url:string = \"/auth/user\";\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  getSession(): Observable<IUser> {\r\n    return this.http.get<IUser>(this.base_url);\r\n  }\r\n\r\n  getStatus(): Observable<string> {\r\n    return this.http.get<string>(\"/loggedIn\");\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-myrecipe',\n  templateUrl: './myrecipe.component.html',\n  styleUrls: ['./myrecipe.component.css']\n})\nexport class MyrecipeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"row content-header\">\n    <div class=\"col-1\"></div>\n    <div class=\"col-11\">\n        <h1 class=\"bar-text\">My Recipe</h1> \n    </div>\n     \n</div>\n\n<div class=\"row\">\n\n    <div class=\"col-2 left\">\n        <br>\n        <ul class=\"nav flex-column\">\n            <button class=\"nav-item left-btn\">\n            <a class=\"nav-link active\" [routerLink]=\"['./newrecipe']\">New recipe</a>\n            </button>\n            <button class=\"nav-item left-btn\">\n            <a class=\"nav-link\" [routerLink]=\"['./recipes']\">History</a>\n            </button>\n        </ul>\n    </div>\n\n    <div class=\"col-8\">\n        <router-outlet></router-outlet>\n    </div>\n    \n    <div class=\"col-2 right\">\n        <app-ads></app-ads>\n    </div>\n\n</div>\n\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-mealplan',\r\n  templateUrl: './mealplan.component.html',\r\n  styleUrls: ['./mealplan.component.css']\r\n})\r\nexport class MealplanComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"row content-header\">\r\n    <div class=\"col-1\"></div>\r\n    <div class=\"col-11\">\r\n        <h1 class=\"bar-text\">Meal Planner</h1> \r\n    </div>\r\n     \r\n</div>\r\n\r\n<div class=\"row\">\r\n\r\n    <div class=\"col-2 left\">\r\n        <br>\r\n        <ul class=\"nav flex-column\">\r\n            <button class=\"nav-item left-btn\">\r\n            <a class=\"nav-link active\" [routerLink]=\"['./newplan']\">New plan</a>\r\n            </button>\r\n            <button class=\"nav-item left-btn\">\r\n            <a class=\"nav-link\" [routerLink]=\"['./history']\">History</a>\r\n            </button>\r\n        </ul>\r\n    </div>\r\n\r\n    <div class=\"col-8\">\r\n        <router-outlet></router-outlet>\r\n    </div>\r\n    \r\n    <div class=\"col-2 right\">\r\n        <app-ads></app-ads>\r\n    </div>\r\n\r\n</div>\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable, of} from 'rxjs';\r\nimport { IUser } from '../interfaces/IUser'\r\nimport { catchError, map, tap } from 'rxjs/operators';\r\nimport { ShareDataService} from '../services/share-data.service'\r\nimport { SimpleResponse} from '../interfaces/ISimpleResponse'\r\nimport { NormalResponse } from '../interfaces/INormalResponse';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n\r\n  //private base_api:string = \"http://localhost:8080\"\r\n  private base_api:string = \"/\"\r\n  private httpOptions = {\r\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n  };\r\n\r\n\r\n  constructor(private http:HttpClient, private shared_service: ShareDataService) {}\r\n\r\n  /**\r\n   * Take the id from the delegating component\r\n   * create a http get request with the id as param\r\n   * send it to the backend and wait for the response in a async way\r\n   * @param id\r\n   */\r\n  getUserById(id: number): Observable<NormalResponse>{\r\n    const url = `${this.base_api}/user/${id}`;\r\n    return this.http.get<NormalResponse>(url).pipe(\r\n      catchError(this.handleError<NormalResponse>(`getUserById id = ${id}`))\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Update User by given id\r\n   * @param user\r\n   * @param id\r\n   */\r\n  updateUser(user: IUser, id: number): Observable<SimpleResponse>{\r\n    let url:string = `${this.base_api}/user/${id}`;\r\n    return this.http.put<SimpleResponse>(url, user, this.httpOptions).pipe(\r\n      catchError(this.handleError<SimpleResponse>('updated user'))\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Add user with the given User object from the delegating component\r\n   * @param user\r\n   */\r\n  addUser(user: IUser): Observable<NormalResponse>{\r\n\r\n    let url: string = this.base_api + \"/user\";\r\n    return this.http.post<NormalResponse>(url, user, this.httpOptions).pipe(\r\n      catchError(this.handleError<NormalResponse>('add user operation failed'))\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Validate if given email already occupied in database\r\n   * @param email\r\n   */\r\n  validateNameEmail(email: string, name: string): Observable<boolean>{\r\n    // let url:string = `${this.base_api}/validation/?name=${name}&?email=${email}`;\r\n    let url: string = this.base_api + \"/validation/?name=\" + name + \"&?email=\" + email;\r\n    return this.http.get<boolean>(url).pipe(\r\n      catchError(this.handleError<boolean>(`check username and email username = ${name} email = ${email}`))\r\n    );\r\n  }\r\n\r\n\r\n  /**\r\n   * Handle the error and return a human readable message to delegating component\r\n   * Return an empty IUser object to keep the app running.\r\n   * @param operation\r\n   * @param result\r\n   */\r\n  private handleError<T>(operation = 'operation', result?: T) {\r\n    return (error: any): Observable<T> => {\r\n\r\n      console.error(error); // log to console instead\r\n\r\n      // Let the app keep running by returning an empty result.\r\n      return of(result as T);\r\n    };\r\n  }\r\n}\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { BehaviorSubject, Subject } from 'rxjs';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\nimport { LoginService } from 'src/app/services/login.service';\r\n\r\n@Component({\r\n  selector: 'app-header-base',\r\n  templateUrl: './header-base.component.html',\r\n  styleUrls: ['./header-base.component.css']\r\n})\r\nexport class HeaderBaseComponent implements OnInit {\r\n\r\n  isLoggedIn: boolean = false;\r\n  private userId: number;\r\n\r\n  constructor(public authService: AuthService) {\r\n    console.log(\"app.component.ts: \" + this.isLoggedIn); \r\n    this.authService.getStatus().subscribe(res => {\r\n      console.log(\"/status:\" + res); \r\n      console.log(\"/status type:\" + typeof(res));\r\n      if(res){\r\n        this.authService.getSession().subscribe(data => {\r\n          if(data.user_id){\r\n            this.isLoggedIn = true; \r\n          }\r\n        })\r\n      }\r\n    }) \r\n    \r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  static setLoginStatus(loginStatus: boolean) {\r\n    //this.isLoggedIn = loginStatus;\r\n  }\r\n\r\n\r\n}\r\n","<div class=\"row header-container\">\r\n\r\n    <div class=\"col-2 align-center\">\r\n        <div ngbDropdown >\r\n            <i class=\"btn btn-outline-primary\" id=\"nav-icon\" ngbDropdownToggle></i>\r\n            <div ngbDropdownMenu aria-labelledby=\"navigation\" class=\"option-container\">\r\n                <button *ngIf= \"isLoggedIn\" ngbDropdownItem class=\"option-font\" [routerLink]=\"['./login']\">Sign Out</button>\r\n                <button *ngIf= \"!isLoggedIn\"ngbDropdownItem class=\"option-font\" [routerLink]=\"['./login']\">Sign In</button>\r\n                <div class=\"dropdown-divider option-divider\"></div>\r\n                <button ngbDropdownItem class=\"option-font\" [routerLink]=\"['./recipes']\">Home Page</button>\r\n                <div *ngIf= \"isLoggedIn\" class=\"dropdown-divider option-divider\"></div>\r\n                <button *ngIf= \"isLoggedIn\"ngbDropdownItem class=\"option-font\" [routerLink]=\"['./myprofile']\">My Profile</button>\r\n                <div *ngIf= \"isLoggedIn\" class=\"dropdown-divider option-divider\"></div>\r\n                <button *ngIf= \"isLoggedIn\"ngbDropdownItem class=\"option-font\" [routerLink]=\"['./myrecipe']\">My Recipe</button>\r\n                <div *ngIf= \"isLoggedIn\" class=\"dropdown-divider option-divider\"></div>\r\n                <button *ngIf= \"isLoggedIn\"ngbDropdownItem class=\"option-font\" [routerLink]=\"['./mealplan']\">Meal Planner</button>\r\n                <!-- <div class=\"dropdown-divider option-divider\"></div> -->\r\n                \r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"col-1 align-center\"></div>\r\n\r\n    <div class=\"col-4 align-center\">\r\n        <h1 class=\"header-title\">Recipe Smart</h1>\r\n    </div>\r\n\r\n    <div class=\"col-2 align-center\">\r\n        <img class=\"logo\" src=\"assets/images/logo.PNG\">\r\n    </div>\r\n\r\n    <div class=\"col-1 align-center\"></div>\r\n\r\n    <!-- <div class=\"col-2 align-center\">\r\n        <button class=\"btn login-btn\">\r\n            <a class=\"nav-link active\" [routerLink]=\"['./login']\">Login</a>\r\n        </button>\r\n        <button class=\"btn login-btn\">\r\n            <a class=\"nav-link active\" [routerLink]=\"['./login']\">Log out</a>\r\n        </button>\r\n    </div> -->\r\n\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { RecipesComponent } from './components/recipes/recipes.component'\r\nimport { RecipeContentComponent } from './components/recipe-content/recipe-content.component'\r\n\r\nimport { MealplanComponent } from './components/mealplan/mealplan.component'\r\nimport { NewplanComponent } from './components/mealplan/newplan/newplan.component'\r\nimport { OldplanComponent } from './components/mealplan/oldplan/oldplan.component'\r\nimport { RecipelistComponent } from './components/mealplan/oldplan/recipelist/recipelist.component'\r\nimport { ShoppinglistComponent } from './components/mealplan/oldplan/shoppinglist/shoppinglist.component'\r\n\r\nimport { UserProfilesComponent } from './components/user-profiles/user-profiles.component'\r\n\r\nimport { LoginComponent } from './components/login/login.component'\r\n\r\nimport { MyrecipeComponent } from './components/myrecipe/myrecipe.component'\r\nimport { NewrecipeComponent } from './components/myrecipe/newrecipe/newrecipe.component'\r\nimport { OldrecipeComponent } from './components/myrecipe/oldrecipe/oldrecipe.component'\r\n\r\n\r\nconst routes: Routes = [\r\n  {path: 'recipes', component: RecipesComponent},\r\n  {path: 'recipes/:recipeId', component: RecipeContentComponent, data: {isMember: false, hasAds: true}},\r\n  {path: 'myprofile', component: UserProfilesComponent},\r\n  \r\n  {path: 'login', component:LoginComponent},\r\n  {\r\n    path: 'mealplan', component: MealplanComponent,\r\n    children: [\r\n      {path: 'newplan', component: NewplanComponent},\r\n      {path: 'history', component: OldplanComponent},\r\n      {path: 'history/:mealplanId/shoppinglist', component: ShoppinglistComponent},\r\n      {path: 'history/:mealplanId/recipelist', component: RecipelistComponent},\r\n      {path: 'history/:mealplanId/recipelist/:recipeId', component: RecipeContentComponent, data: {isMember: false, hasAds: false}},\r\n      {path: '**', redirectTo: 'newplan'}\r\n    ]  \r\n  },\r\n  {\r\n    path: 'myrecipe', component: MyrecipeComponent,\r\n    children: [\r\n      {path: 'newrecipe', component: NewrecipeComponent, data: {isUpdate: false}},\r\n      {path: 'recipes', component: OldrecipeComponent},\r\n      {path: 'recipes/:recipeId', component: RecipeContentComponent, data: {isMember: true, hasAds: false}},\r\n      {path: 'recipes/:recipeId/edit', component: NewrecipeComponent, data: {isUpdate: true}},\r\n      {path: '**', redirectTo: 'recipes'}\r\n    ]  \r\n  },\r\n  {\r\n    path: '',\r\n    redirectTo: '/recipes',\r\n    pathMatch: 'full'\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}